{"version":3,"sources":["services/api.js","Components/searchbar/Searchbar.js","Components/imageGallery/imageGalleryItem/ImageGalleryItem.js","Components/imageGallery/ImageGallery.js","Components/button/Button.js","Components/modal/Modal.js","Components/App.js","index.js"],"names":["axios","defaults","baseURL","API_KEY","fetchImages","a","query","page","get","response","data","console","log","Searchbar","state","handleChange","e","value","target","setState","handleSubmit","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","alt","onSelect","id","src","onClick","ImageGallery","images","map","image","Button","title","Modal","modalItem","handleEsc","code","toggleModal","handleClick","currentTarget","window","addEventListener","removeEventListener","largeImageURL","tags","App","error","isLoading","showModal","loadMore","prev","hits","find","item","prevState","scrollTo","top","document","body","scrollHeight","behavior","color","height","width","timeout","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"mSAEAA,IAAMC,SAASC,QAAU,sBACzB,IAAMC,EAAU,qCAEHC,EAAW,uCAAG,4CAAAC,EAAA,6DAAOC,EAAP,+BAAe,GAAIC,EAAnB,+BAA0B,EAA1B,kBAEAP,IAAMQ,IAAN,kBACVF,EADU,iBACIC,EADJ,gBACgBJ,EADhB,yDAFA,cAEjBM,EAFiB,yBAKhBA,EAASC,MALO,gCAOvBC,QAAQC,IAAR,MAPuB,yDAAH,qD,OC4CTC,E,4MA5CbC,MAAQ,CACNR,MAAO,I,EAGTS,aAAe,SAAAC,GACb,IAAQC,EAAUD,EAAEE,OAAZD,MACR,EAAKE,SAAS,CAAEb,MAAOW,K,EAEzBG,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKT,MAAMR,OAC/B,EAAKa,SAAS,CAAEb,MAAO,M,4CAGzB,WACE,IAAQA,EAAUkB,KAAKV,MAAfR,MACR,OACE,mCACE,wBAAQmB,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaF,SAAUC,KAAKJ,aAA5C,UACE,wBAAQM,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVC,KAAK,OACLT,MAAOX,EACPqB,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUN,KAAKT,0B,GAhCLgB,a,QCcTC,EAdU,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GACvD,OACE,oBAAIX,UAAU,mBAAd,SACE,qBAAKY,IAAKJ,EAAcC,IAAKA,EAAKI,QAAS,kBAAMH,EAASC,SCWjDG,EAbM,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQL,EAAX,EAAWA,SAAX,OACnB,oBAAIV,UAAU,eAAd,SACGe,EAAOC,KAAI,SAAAC,GACV,OAAO,cAAC,EAAD,2BAAqCA,GAArC,IAA4CP,SAAUA,IAA/BO,EAAMN,UCG3BO,EARA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAON,EAAc,EAAdA,QACvB,OACE,wBAAQb,UAAU,SAASC,KAAK,SAASY,QAASA,EAAlD,SACGM,KCiCQC,E,4MAlCb/B,MAAQ,CACNgC,UAAW,I,EAWbC,UAAY,SAAA/B,GAAC,MAAe,WAAXA,EAAEgC,MAAqB,EAAK1B,MAAM2B,e,EAEnDC,YAAc,SAAAlC,GAAC,OAAIA,EAAEE,SAAWF,EAAEmC,eAAiB,EAAK7B,MAAM2B,e,uDAV9D,WACEG,OAAOC,iBAAiB,UAAW7B,KAAKuB,a,kCAG1C,WACEK,OAAOE,oBAAoB,UAAW9B,KAAKuB,a,oBAO7C,WACE,OACE,qBAAKtB,UAAU,UAAUa,QAASd,KAAK0B,YAAvC,SACE,qBAAKzB,UAAU,QAAf,SACE,qBACEY,IAAKb,KAAKF,MAAMwB,UAAUS,cAC1BrB,IAAKV,KAAKF,MAAMwB,UAAUU,e,GAvBlBzB,a,iBC4EL0B,E,4MAtEb3C,MAAQ,CACNR,MAAO,GACPkC,OAAQ,GACRkB,MAAO,KACPnD,KAAM,EACNoD,WAAW,EACXC,WAAW,EACXd,UAAW,GACXS,cAAe,I,EAYjBM,S,sBAAW,4BAAAxD,EAAA,sEACYD,EAAY,EAAKU,MAAMR,MAAO,EAAKQ,MAAMP,MADrD,OACHiC,EADG,OAET,EAAKrB,UAAS,SAAA2C,GAAI,MAAK,CACrBtB,OAAO,GAAD,mBAAMsB,EAAKtB,QAAX,YAAsBA,EAAOuB,OACnCxD,KAAMuD,EAAKvD,KAAO,MAJX,2C,EAQXgB,S,uCAAW,WAAMjB,GAAN,eAAAD,EAAA,sEACYD,EAAYE,GADxB,OACHkC,EADG,OAET,EAAKrB,SAAS,CAAEb,MAAOA,EAAOkC,OAAQA,EAAOuB,KAAMxD,KAAM,IAFhD,2C,wDAKX0C,YAAc,kBAAM,EAAK9B,SAAS,CAAEyC,WAAY,EAAK9C,MAAM8C,a,EAE3DzB,S,uCAAW,WAAMC,GAAN,SAAA/B,EAAA,sEACH,EAAKc,UAAS,SAAAL,GAAK,MAAK,CAC5ByC,cAAezC,EAAM0B,OAAOwB,MAAK,SAAAC,GAAI,OAAIA,EAAK7B,KAAOA,KACrDwB,WAAY,EAAK9C,MAAM8C,cAHhB,2C,8GAxBX,SAAmBM,GACbA,EAAU1B,SAAWhB,KAAKV,MAAM0B,QAClCY,OAAOe,SAAS,CACdC,IAAKC,SAASC,KAAKC,aACnBC,SAAU,a,oBA2BhB,WACE,MAAwDhD,KAAKV,MAArD0B,EAAR,EAAQA,OAAQmB,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,UAAWL,EAAtC,EAAsCA,cACtC,OACE,qCACE,cAAC,EAAD,CAAWhC,SAAUC,KAAKD,WAC1B,qBAAKE,UAAU,SAAf,SACGkC,GACC,cAAC,IAAD,CACEjC,KAAK,OACL+C,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,QAIf,cAAC,EAAD,CAAcpC,OAAQA,EAAQL,SAAUX,KAAKW,WAC5CK,EAAOqC,OAAS,GACf,cAAC,EAAD,CAAQjC,MAAM,WAAWN,QAASd,KAAKqC,WAExCD,GACC,cAAC,EAAD,CAAOd,UAAWS,EAAeN,YAAazB,KAAKyB,qB,GAhE3ClB,aCJlB+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFX,SAASY,eAAe,W","file":"static/js/main.ee4ac26b.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com';\nconst API_KEY = '22656351-88e3bd1ab5f4acb4ac723e7f5';\n\nexport const fetchImages = async (query = '', page = 1) => {\n  try {\n    const response = await axios.get(\n      `/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../../../src/index.css';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = e => {\n    const { value } = e.target;\n    this.setState({ query: value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <>\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              value={query}\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              onChange={this.handleChange}\n            />\n          </form>\n        </header>\n      </>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../../../src/index.css';\n\nconst ImageGalleryItem = ({ webformatURL, alt, onSelect, id }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img src={webformatURL} alt={alt} onClick={() => onSelect(id)} />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  alt: PropTypes.string,\n  onSelect: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from './imageGalleryItem/ImageGalleryItem';\nimport '../../../src/index.css';\n\nconst ImageGallery = ({ images, onSelect }) => (\n  <ul className=\"ImageGallery\">\n    {images.map(image => {\n      return <ImageGalleryItem key={image.id} {...image} onSelect={onSelect} />;\n    })}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  onSelect: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport '../../../src/index.css';\n\nconst Button = ({ title, onClick }) => {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\n      {title}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../../../src/index.css';\n\nclass Modal extends Component {\n  state = {\n    modalItem: [],\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleEsc);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleEsc);\n  }\n\n  handleEsc = e => e.code === 'Escape' && this.props.toggleModal();\n\n  handleClick = e => e.target === e.currentTarget && this.props.toggleModal();\n\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.handleClick}>\n        <div className=\"Modal\">\n          <img\n            src={this.props.modalItem.largeImageURL}\n            alt={this.props.modalItem.tags}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { fetchImages } from '../services/api';\nimport Searchbar from './searchbar/Searchbar';\nimport ImageGallery from './imageGallery/ImageGallery';\nimport Button from './button/Button';\nimport Modal from './modal/Modal';\n\nimport Loader from 'react-loader-spinner';\n\nclass App extends Component {\n  state = {\n    query: '',\n    images: [],\n    error: null,\n    page: 1,\n    isLoading: false,\n    showModal: false,\n    modalItem: [],\n    largeImageURL: {},\n  };\n\n  componentDidUpdate(prevState) {\n    if (prevState.images !== this.state.images) {\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  loadMore = async () => {\n    const images = await fetchImages(this.state.query, this.state.page);\n    this.setState(prev => ({\n      images: [...prev.images, ...images.hits],\n      page: prev.page + 1,\n    }));\n  };\n\n  onSubmit = async query => {\n    const images = await fetchImages(query);\n    this.setState({ query: query, images: images.hits, page: 2 });\n  };\n\n  toggleModal = () => this.setState({ showModal: !this.state.showModal });\n\n  onSelect = async id => {\n    await this.setState(state => ({\n      largeImageURL: state.images.find(item => item.id === id),\n      showModal: !this.state.showModal,\n    }));\n  };\n\n  render() {\n    const { images, isLoading, showModal, largeImageURL } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.onSubmit} />\n        <div className=\"loader\">\n          {isLoading && (\n            <Loader\n              type=\"Puff\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n              timeout={3000} //3 secs\n            />\n          )}\n        </div>\n        <ImageGallery images={images} onSelect={this.onSelect} />\n        {images.length > 0 && (\n          <Button title=\"LoadMore\" onClick={this.loadMore} />\n        )}\n        {showModal && (\n          <Modal modalItem={largeImageURL} toggleModal={this.toggleModal} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n\n// handleClick = async () => {\n//   const { query, page } = this.state;\n//   this.fetchArticles(query, page);\n// };\n\n// handleFormSubmit = query => {\n//   this.setState({ query });\n// };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}